[
    {
        "id": "aa2139114aac899f",
        "type": "tab",
        "label": "Get data from API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a19a3d618f6d937",
        "type": "tab",
        "label": "DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bdd9c2353f1a493e",
        "type": "tab",
        "label": "K-Clusters",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fccd04d924c1f084",
        "type": "tab",
        "label": "Predictive Models",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "39a5a9876bc94f25",
        "type": "sqlitedb",
        "db": "/home/mike/HUA/WebServices/HUA-DIT-WebServices/attica_traffic.sqlite",
        "mode": "RWC"
    },
    {
        "id": "dbf05a9182a29505",
        "type": "http request",
        "z": "aa2139114aac899f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://data.gov.gr/api/v1/query/road_traffic_attica?date_from={{{date_from}}}&date_to={{{date_to}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "Token 18b95bf584abece33b62fba77e946f5d19760873"
            }
        ],
        "x": 590,
        "y": 60,
        "wires": [
            [
                "aa14258ae9fa65bb"
            ]
        ]
    },
    {
        "id": "a06fceb33af83e8a",
        "type": "function",
        "z": "aa2139114aac899f",
        "name": "set query date parameters",
        "func": "msg.payload = {}\nmsg[\"date_from\"] = \"2023-04-05\"\nmsg[\"date_to\"] = \"2023-04-06\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 60,
        "wires": [
            [
                "dbf05a9182a29505"
            ]
        ]
    },
    {
        "id": "8d74434767d76ab9",
        "type": "inject",
        "z": "aa2139114aac899f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "a06fceb33af83e8a"
            ]
        ]
    },
    {
        "id": "77ba76428fbfc664",
        "type": "function",
        "z": "aa2139114aac899f",
        "name": "insert traffic data",
        "func": "let query = {}\nquery[\"topic\"] = `INSERT INTO traffic(app_process_time, counted_cars, average_speed, device_id) VALUES (\"${msg.payload.appprocesstime}\", \"${msg.payload.countedcars}\", \"${msg.payload.average_speed}\", \"${msg.payload.deviceid}\")`\nreturn query",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 140,
        "wires": [
            [
                "3a43bae8791684d6"
            ]
        ]
    },
    {
        "id": "aa14258ae9fa65bb",
        "type": "json",
        "z": "aa2139114aac899f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "3e4e9c6a6b2c8b2c"
            ]
        ]
    },
    {
        "id": "3e4e9c6a6b2c8b2c",
        "type": "function",
        "z": "aa2139114aac899f",
        "name": "build traffic data list",
        "func": "let data_set = []\n\nfor (let item of msg.payload) {\n    const record = {\n        \"deviceid\": item.deviceid,\n        \"appprocesstime\": item.appprocesstime,\n        \"countedcars\": item.countedcars,\n        \"average_speed\": item.average_speed\n    }    \n    data_set.push({\"payload\": record})\n}\n\nreturn [data_set];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 140,
        "wires": [
            [
                "77ba76428fbfc664"
            ]
        ]
    },
    {
        "id": "3a43bae8791684d6",
        "type": "link out",
        "z": "aa2139114aac899f",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "f69b41b69e23d8a5"
        ],
        "x": 695,
        "y": 140,
        "wires": []
    },
    {
        "id": "19dfc0d054f8700b",
        "type": "sqlite",
        "z": "5a19a3d618f6d937",
        "mydb": "39a5a9876bc94f25",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "DB",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "cc952a07df5372b7"
            ]
        ]
    },
    {
        "id": "cc952a07df5372b7",
        "type": "debug",
        "z": "5a19a3d618f6d937",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 140,
        "wires": []
    },
    {
        "id": "67b38eca3eac41b0",
        "type": "inject",
        "z": "5a19a3d618f6d937",
        "name": "Create traffic table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE traffic(device_id TEXT, app_process_time TEXT, counted_cars INTEGER, average_speed REAL, PRIMARY KEY(device_id, app_process_time) FOREIGN KEY(device_id) REFERENCES sensors(device_id) ON DELETE CASCADE)",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "19dfc0d054f8700b"
            ]
        ]
    },
    {
        "id": "3e684521e2270168",
        "type": "inject",
        "z": "5a19a3d618f6d937",
        "name": "Create sensors table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE sensors(sensor_id TEXT PRIMARY KEY, road_name TEXT, road_info TEXT)",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "19dfc0d054f8700b"
            ]
        ]
    },
    {
        "id": "8246536718c22a72",
        "type": "inject",
        "z": "5a19a3d618f6d937",
        "name": "Drop table traffic",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE traffic",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "19dfc0d054f8700b"
            ]
        ]
    },
    {
        "id": "f69b41b69e23d8a5",
        "type": "link in",
        "z": "5a19a3d618f6d937",
        "name": "link in to DB",
        "links": [
            "cbc7e4cf0be56963",
            "3a43bae8791684d6",
            "2c61b8bd7bcb5476"
        ],
        "x": 225,
        "y": 80,
        "wires": [
            [
                "19dfc0d054f8700b"
            ]
        ]
    },
    {
        "id": "06f0c711cccb18d7",
        "type": "inject",
        "z": "5a19a3d618f6d937",
        "d": true,
        "name": "Select sensor ids from Λ.ΚΗΦΙΣΟΥ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT sensor_id FROM sensors WHERE road_name = \"Λ. ΚΗΦΙΣΟΥ\"",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 60,
        "wires": [
            [
                "19dfc0d054f8700b"
            ]
        ]
    },
    {
        "id": "1456057e1d258a6c",
        "type": "inject",
        "z": "5a19a3d618f6d937",
        "name": "SELECT Λ.ΚΗΦΙΣΟΥ DATA",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM traffic JOIN sensors ON traffic.device_id = sensors.sensor_id WHERE sensors.road_name = 'Λ. ΚΗΦΙΣΟΥ'",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "776a307d869a845b"
            ]
        ]
    },
    {
        "id": "8968aa742d9061a8",
        "type": "function",
        "z": "5a19a3d618f6d937",
        "name": "Build speeds array",
        "func": "let speeds = []\n\nfor (let item of msg.payload) {\n    speeds.push([item.average_speed])\n}\nmsg.payload = speeds\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            [
                "412cc0d52fd20b98",
                "b82c153f3ad76008"
            ]
        ]
    },
    {
        "id": "412cc0d52fd20b98",
        "type": "debug",
        "z": "5a19a3d618f6d937",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 380,
        "wires": []
    },
    {
        "id": "b82c153f3ad76008",
        "type": "link out",
        "z": "5a19a3d618f6d937",
        "d": true,
        "name": "link out 4",
        "mode": "link",
        "links": [
            "01617a9de4dcf600"
        ],
        "x": 775,
        "y": 440,
        "wires": []
    },
    {
        "id": "776a307d869a845b",
        "type": "sqlite",
        "z": "5a19a3d618f6d937",
        "mydb": "39a5a9876bc94f25",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "DB",
        "x": 410,
        "y": 440,
        "wires": [
            [
                "8968aa742d9061a8"
            ]
        ]
    },
    {
        "id": "0bfd4c86d322b345",
        "type": "function",
        "z": "bdd9c2353f1a493e",
        "name": "K-Clustering",
        "func": "var clusterMaker = global.get('clusters')\n//number of clusters, defaults to undefined\nclusterMaker.k(3);\n\n// //number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\n// //data from which to identify clusters, defaults to []\n// clusterMaker.data([[1, 0], [0, 1], [0, 0], [-10, 10], [-9, 11], [10, 10], [11, 12]]);\n// clusterMaker.data([[13],[14],[56],[54],[32],[35]])\nclusterMaker.data(msg.payload)\nmsg.payload = clusterMaker.clusters()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "cdaf23531d25e68c"
            ]
        ]
    },
    {
        "id": "cdaf23531d25e68c",
        "type": "debug",
        "z": "bdd9c2353f1a493e",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 60,
        "wires": []
    },
    {
        "id": "01617a9de4dcf600",
        "type": "link in",
        "z": "bdd9c2353f1a493e",
        "name": "K-Clusters",
        "links": [
            "b82c153f3ad76008"
        ],
        "x": 145,
        "y": 60,
        "wires": [
            [
                "0bfd4c86d322b345"
            ]
        ]
    }
]